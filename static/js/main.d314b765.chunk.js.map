{"version":3,"sources":["features/Form/model/app/index.ts","features/Form/model/auth/index.ts","features/Form/view/auth/authForm.tsx","pages/Auth.tsx","features/Form/model/register/index.ts","features/Form/view/register/registerForm.tsx","pages/Register.tsx","pages/Main.tsx","App.tsx","reportWebVitals.ts","features/Form/model/app/init.ts","features/Form/model/auth/init.ts","features/Form/model/register/init.ts","index.tsx"],"names":["d","createDomain","$appLoaded","store","$userAuthorized","appload","event","getProfileFx","effect","logout","$email","$password","$walidationMessage","setEmail","setPassword","login","loginFx","AuthForm","email","useStore","password","walid","history","useHistory","React","useEffect","unwatch","done","watch","push","className","placeholder","value","onChange","e","target","to","type","onClick","auth","Auth","$username","setUsername","register","registerFx","createEffect","RegisterForm","username","autoFocus","Register","Main","App","appLoaded","exact","path","PrivateRouterWrapper","children","isAuth","replace","GuestRouterWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","on","fail","forward","from","doneData","localStorage","clear","_","use","loginCredentials","stringify","JSON","setItem","console","log","reset","data","token","sample","clock","source","combine","p","registerCredentials","$loginAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d314b765.chunk.js","sourcesContent":["import { createDomain } from \"effector\";\r\n\r\nconst d = createDomain()\r\n\r\nexport const $appLoaded = d.store<boolean>(false)\r\nexport const $userAuthorized = d.store(false)\r\nexport const appload = d.event<void>()\r\nexport const getProfileFx = d.effect<any, any, any>()\r\nexport const logout = d.event()\r\n","import { createDomain } from \"effector\";\r\n\r\nconst d = createDomain()\r\n\r\nexport const $email = d.store('')\r\nexport const $password = d.store('')\r\nexport const $walidationMessage = d.store<string | null>(null)\r\n\r\nexport const setEmail = d.event<string>()\r\nexport const setPassword = d.event<string>()\r\n\r\nexport const login = d.event()\r\n\r\ntype LoginPayload = {\r\n    email: string\r\n    password: string\r\n}\r\nexport const loginFx = d.effect<LoginPayload, any, any>()\r\n","import React from \"react\";\r\nimport { useStore } from 'effector-react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { $email, $password, setEmail, setPassword, login as auth, $walidationMessage, loginFx } from '../../model/auth'\r\n\r\nexport const AuthForm = () => {\r\n    const email = useStore($email)\r\n    const password = useStore($password)\r\n    const walid = useStore($walidationMessage)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        const unwatch = loginFx.done.watch(() => {\r\n            history.push('/mainpage');\r\n        })\r\n        return () => unwatch()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"authForm\">\r\n                <h1>Login</h1>\r\n                <p>{walid}</p>\r\n                <p>Please sing-in to your account</p>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input className=\"input\" placeholder={'email'} value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <div className=\"authForm__password\">\r\n                        <label>Password</label>{' '}\r\n                        <Link className=\"authForm__link--pass\" to=\"/registration\">\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </div>\r\n                    <input className=\"input\" type='password' placeholder={'password'} value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <button className=\"button_auth\" onClick={() => auth()}>Войти</button>\r\n                    <div className=\"authForm__links\">\r\n                        <p>New on our platform?</p>{' '}\r\n                        <Link className=\"authForm__link--bottom\" to=\"/registration\">\r\n                            Create an account\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { AuthForm } from '../features/Form/view/auth/authForm'\r\n\r\nexport const Auth = () => {\r\n    return <AuthForm />\r\n}\r\n\r\n","import { createDomain } from 'effector'\r\n\r\nconst d = createDomain()\r\n\r\nexport const $email = d.store('')\r\nexport const setEmail = d.event<string>()\r\nexport const $password = d.store('')\r\nexport const setPassword = d.event<string>()\r\nexport const $username = d.store('')\r\nexport const setUsername = d.event<string>()\r\n\r\nexport const register = d.event()\r\n\r\ntype RegisterFxPayload = {\r\n    username: string,\r\n    email: string\r\n    password: string\r\n}\r\nexport const registerFx = d.createEffect<RegisterFxPayload, void, void>()\r\n","import React from \"react\";\r\nimport { useStore } from 'effector-react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { $email, $password, $username, register, registerFx, setEmail, setPassword, setUsername } from '../../model/register';\r\nimport { $walidationMessage } from \"../../model/auth\";\r\n\r\n\r\nexport const RegisterForm = () => {\r\n    const email = useStore($email)\r\n    const password = useStore($password)\r\n    const username = useStore($username)\r\n    const walid = useStore($walidationMessage)\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        const unwatch = registerFx.done.watch(() => {\r\n            history.push('/mainpage');\r\n        })\r\n        return () => unwatch()\r\n    }, [])\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"authForm\">\r\n                <h1>Registration</h1>\r\n                <p>{walid}</p>\r\n                <label>Username</label>\r\n                <input\r\n                    className=\"input\"\r\n                    autoFocus={true}\r\n                    placeholder={'username'}\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <label>Email</label>\r\n                <input\r\n                    className=\"input\"\r\n                    placeholder={'email'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    className=\"input\"\r\n                    type='password'\r\n                    placeholder={'password'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"button_auth\"\r\n                    onClick={() => register()}\r\n                >Регистрация</button>\r\n                <div className=\"authForm__links\">\r\n                    <p>Already have an account?</p>\r\n                    <Link className=\"authForm__link--bottom\" to=\"/\">\r\n                        Sign in instead\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { RegisterForm } from '../features/Form/view/register/registerForm';\r\n\r\nexport const Register = () => {\r\n    return <RegisterForm />\r\n}\r\n","import React from \"react\";\r\nimport { useStore } from \"effector-react\";\r\nimport { logout } from \"../features/Form/model/app\";\r\nimport { $email } from \"../features/Form/model/auth\";\r\n\r\nexport const Main = () => {\r\n    const email = useStore($email)\r\n    return (\r\n        <>\r\n            <p>Вы вошли как {email}</p>\r\n            <button className=\"button_auth\" onClick={() => logout()}>Выйти</button>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { Route, BrowserRouter, Switch, useHistory } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport './styles/index.scss';\nimport { $appLoaded, $userAuthorized, appload } from './features/Form/model/app';\nimport { Auth } from './pages/Auth';\nimport { Register } from './pages/Register';\nimport { Main } from './pages/Main';\n\nexport const App = () => {\n  const appLoaded = useStore($appLoaded)\n  React.useEffect(() => {\n    appload()\n  }, [])\n  if (!appLoaded) {\n    return <>Загрузка...</>\n  }\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <GuestRouterWrapper>\n            <Auth />\n          </GuestRouterWrapper>\n        </Route>\n        <Route exact path=\"/registration\">\n          <GuestRouterWrapper>\n            <Register />\n          </GuestRouterWrapper>\n        </Route>\n        <Route exact path=\"/mainpage\">\n          <PrivateRouterWrapper>\n            <Main />\n          </PrivateRouterWrapper>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nconst PrivateRouterWrapper: React.FC = ({ children }) => {\n  const history = useHistory()\n  const appLoaded = useStore($appLoaded)\n  const isAuth = useStore($userAuthorized)\n  React.useEffect(() => {\n    if (!isAuth) {\n      history.replace('/')\n    }\n  }, [appLoaded, isAuth])\n  return (<>{children}</>)\n}\n\nconst GuestRouterWrapper: React.FC = ({ children }) => {\n  const history = useHistory()\n  const appLoaded = useStore($appLoaded)\n  const isAuth = useStore($userAuthorized)\n  React.useEffect(() => {\n    if (isAuth) {\n      history.replace('/mainpage')\n    }\n  }, [appLoaded, isAuth])\n  return (<>{children}</>)\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { forward } from \"effector\";\r\nimport { $appLoaded, $userAuthorized, appload, getProfileFx, logout } from \".\";\r\nimport { loginFx } from \"../auth\";\r\n\r\n$appLoaded\r\n    .on(getProfileFx.done, () => true)\r\n    .on(getProfileFx.fail, () => true)\r\n\r\nforward({\r\n    from: appload,\r\n    to: getProfileFx\r\n})\r\n\r\n$userAuthorized\r\n    .on(getProfileFx.done, () => true)\r\n    .on(logout, () => false)\r\n    .on(loginFx.doneData, () => true)\r\n\r\nlogout.watch(() => {\r\n    localStorage.clear()\r\n})\r\n","import { combine, sample } from 'effector'\r\nimport { $email, $password, $walidationMessage, login, loginFx, setEmail, setPassword } from './index'\r\n\r\n$email\r\n    .on(setEmail, (_, email) => email)\r\n\r\n$password\r\n    .on(setPassword, (_, password) => password)\r\n\r\nloginFx.use(({ email, password }) => {\r\n    const loginCredentials = { email, password }\r\n    const stringify = JSON.stringify(loginCredentials)\r\n    return localStorage.setItem('credentials', stringify)\r\n})\r\n\r\n$walidationMessage\r\n    .on(loginFx.fail, () => console.log(\"ошибка логина\"))\r\n    .reset([setEmail, setPassword])\r\n\r\n\r\nloginFx.doneData.watch(({ data }) => {\r\n    console.log(data)\r\n    localStorage.setItem('authToken', data.token)\r\n})\r\n\r\nsample({\r\n    clock: login,\r\n    target: loginFx,\r\n    source: combine($email, $password, (e, p) => {\r\n        return {\r\n            email: e,\r\n            password: p,\r\n        }\r\n    })\r\n})\r\n","import { combine, sample } from 'effector'\r\nimport { $email, $password, $username, register, registerFx, setEmail, setPassword, setUsername } from \"./index\";\r\n\r\n$email\r\n    .on(setEmail, (_, email) => email)\r\n\r\n$password\r\n    .on(setPassword, (_, password) => password)\r\n\r\n$username\r\n    .on(setUsername, (_, username) => username)\r\n\r\nregisterFx.use(({ username, email, password }) => {\r\n    const registerCredentials = { username, email, password }\r\n    const stringify = JSON.stringify(registerCredentials)\r\n    return localStorage.setItem('credentialsReg', stringify)\r\n})\r\n\r\nconst $loginAndPassword = combine(\r\n    $username,\r\n    $email,\r\n    $password,\r\n    (username, email, password) => ({ username, email, password })\r\n)\r\n\r\nsample({\r\n    source: $loginAndPassword,\r\n    target: registerFx,\r\n    clock: register,\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './features/init'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}